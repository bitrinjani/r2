name: CI

on:
  push:
    branches: 
      - master
    paths-ignore:
      - .env.sample
      - .gitignore
      - config.json.sample
      - LICENSE
      - README.md
      - .github/**
      - .vscode/**
      - src/transport/**
      - test/**
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: '20.x'

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - name: Check npm cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
          key: npm-20.x-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci
        
      - name: List dependencies
        run: npm list --all
        continue-on-error: true

      - name: Lint
        run: npm run lint -- --max-warnings 0

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: '20.x'

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - name: Check npm cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
          key: npm-20.x-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        
  build-webui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: cd to webui
        run: |
          cd ./webui      
      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: '20.x'

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - name: Check npm cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.npm-cache.outputs.dir }}
          key: npm-20.x-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        
#  test:
#   runs-on: ubuntu-latest
#     needs:
#       - build
#     strategy:
#       matrix:
#         node-version:
#           - '16.x'
#           - '18.x'
#     steps:
#       - uses: actions/checkout@v3
# 
#       - name: Setup config for test
#         run: cp util/config-for-test.json config.json
#       
#       - name: Setup Node.js
#         uses: actions/setup-node@v3.6.0
#         with:
#           node-version: ${{ matrix.node-version }}
# 
#       - name: Get npm cache directory
#         id: npm-cache
#         run: |
#           echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
#       - name: Check npm cache
#         uses: actions/cache@v3
#         with:
#           path: |
#             ${{ steps.npm-cache.outputs.dir }}
#           key: npm-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
#           restore-keys: npm-
# 
#       - name: Install dependencies
#         run: npm ci
# 
#       - name: Build
#         run: npm run build
# 
#       - name: Test
#         run: npm test
# 
#       - name: Test to load scripts to Node.js
#         run: node util/exec -r ./util/testLoad -e 'process.exit()'

  success-all-test:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - lint
      - build
      - build-webui
#       - test
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - name: Check failure
        if: env.WORKFLOW_CONCLUSION == 'failure'
        run: exit 1
      
      - name: Success
        run: echo "All done"
        if: ${{ success() }}
